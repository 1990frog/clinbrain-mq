<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.clinbrain.mq.mapper.auto.MqMessageMapper">
  <resultMap id="BaseResultMap" type="com.clinbrain.mq.model.custom.UMqMessage">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="message_genre" jdbcType="VARCHAR" property="messageGenre" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="retry" jdbcType="INTEGER" property="retry" />
    <result column="delay" jdbcType="VARCHAR" property="delay" />
    <result column="assign_to" jdbcType="VARCHAR" property="assignTo" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="template_id" jdbcType="BIGINT" property="templateId" />
    <result column="trace_id" jdbcType="VARCHAR" property="traceId" />
    <result column="original_data" jdbcType="VARCHAR" property="originalData" />
    <result column="log" jdbcType="VARCHAR" property="log" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="expired" jdbcType="VARCHAR" property="expired" />
    <result column="attach_paths" jdbcType="VARCHAR" property="attachPaths" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
  
	  	  	      	id,
       	  	      	message_genre,
       	  	      	status,
       	  	      	retry,
       	  	      	delay,
       	  	      	assign_to,
       	  	      	title,
       	  	      	content,
       	  	      	template_id,
       	  	      	trace_id,
       	  	      	original_data,
       	  	      	log,
       	  	      	create_time,
       	  	      	update_time,
       	  	      	expired,
       	  	    	  	attach_paths
       	  	
  </sql>
  
  <select id="selectByExample" parameterType="com.clinbrain.mq.model.custom.UMqMessageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from u_mq_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from u_mq_message
    where id = #{id,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from u_mq_message
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.clinbrain.mq.model.custom.UMqMessageExample">
    delete from u_mq_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <insert id="insert" parameterType="com.clinbrain.mq.model.custom.UMqMessage">
    insert into u_mq_message (
      	  	       id,
       	  	       message_genre,
       	  	       status,
       	  	       retry,
       	  	       delay,
       	  	       assign_to,
       	  	       title,
       	  	       content,
       	  	       template_id,
       	  	       trace_id,
       	  	       original_data,
       	  	       log,
       	  	       create_time,
       	  	       update_time,
       	  	       expired,
       	  	    	  attach_paths
       	    )
    values (
	  	  	      	#{id,jdbcType=BIGINT},
       	  	      	#{messageGenre,jdbcType=VARCHAR},
       	  	      	#{status,jdbcType=VARCHAR},
       	  	      	#{retry,jdbcType=INTEGER},
       	  	      	#{delay,jdbcType=VARCHAR},
       	  	      	#{assignTo,jdbcType=VARCHAR},
       	  	      	#{title,jdbcType=VARCHAR},
       	  	      	#{content,jdbcType=VARCHAR},
       	  	      	#{templateId,jdbcType=BIGINT},
       	  	      	#{traceId,jdbcType=VARCHAR},
       	  	      	#{originalData,jdbcType=VARCHAR},
       	  	      	#{log,jdbcType=VARCHAR},
       	  	      	#{createTime,jdbcType=TIMESTAMP},
       	  	      	#{updateTime,jdbcType=TIMESTAMP},
       	  	      	#{expired,jdbcType=VARCHAR},
       	  	    	  #{attachPaths,jdbcType=VARCHAR}
       	    )
  </insert>
  
  <insert id="insertSelective" parameterType="com.clinbrain.mq.model.custom.UMqMessage">
    insert into u_mq_message
    <trim prefix="(" suffix=")" suffixOverrides=",">
          
      <if test="id != null">
        id,
      </if>
         
      <if test="messageGenre != null">
        message_genre,
      </if>
         
      <if test="status != null">
        status,
      </if>
         
      <if test="retry != null">
        retry,
      </if>
         
      <if test="delay != null">
        delay,
      </if>
         
      <if test="assignTo != null">
        assign_to,
      </if>
         
      <if test="title != null">
        title,
      </if>
         
      <if test="content != null">
        content,
      </if>
         
      <if test="templateId != null">
        template_id,
      </if>
         
      <if test="traceId != null">
        trace_id,
      </if>
         
      <if test="originalData != null">
        original_data,
      </if>
         
      <if test="log != null">
        log,
      </if>
         
      <if test="createTime != null">
        create_time,
      </if>
         
      <if test="updateTime != null">
        update_time,
      </if>
         
      <if test="expired != null">
        expired,
      </if>
         
      <if test="attachPaths != null">
        attach_paths,
      </if>
         </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
          <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
          <if test="messageGenre != null">
        #{messageGenre,jdbcType=VARCHAR},
      </if>
          <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
          <if test="retry != null">
        #{retry,jdbcType=INTEGER},
      </if>
          <if test="delay != null">
        #{delay,jdbcType=VARCHAR},
      </if>
          <if test="assignTo != null">
        #{assignTo,jdbcType=VARCHAR},
      </if>
          <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
          <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
          <if test="templateId != null">
        #{templateId,jdbcType=BIGINT},
      </if>
          <if test="traceId != null">
        #{traceId,jdbcType=VARCHAR},
      </if>
          <if test="originalData != null">
        #{originalData,jdbcType=VARCHAR},
      </if>
          <if test="log != null">
        #{log,jdbcType=VARCHAR},
      </if>
          <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
          <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
          <if test="expired != null">
        #{expired,jdbcType=VARCHAR},
      </if>
          <if test="attachPaths != null">
        #{attachPaths,jdbcType=VARCHAR},
      </if>
        </trim>
  </insert>
  
  <select id="countByExample" parameterType="com.clinbrain.mq.model.custom.UMqMessageExample" resultType="java.lang.Long">
    select count(*) from u_mq_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByExampleSelective" parameterType="map">
    update u_mq_message
    <set>
          <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
          <if test="record.messageGenre != null">
        message_genre = #{record.messageGenre,jdbcType=VARCHAR},
      </if>
          <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
          <if test="record.retry != null">
        retry = #{record.retry,jdbcType=INTEGER},
      </if>
          <if test="record.delay != null">
        delay = #{record.delay,jdbcType=VARCHAR},
      </if>
          <if test="record.assignTo != null">
        assign_to = #{record.assignTo,jdbcType=VARCHAR},
      </if>
          <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
          <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
          <if test="record.templateId != null">
        template_id = #{record.templateId,jdbcType=BIGINT},
      </if>
          <if test="record.traceId != null">
        trace_id = #{record.traceId,jdbcType=VARCHAR},
      </if>
          <if test="record.originalData != null">
        original_data = #{record.originalData,jdbcType=VARCHAR},
      </if>
          <if test="record.log != null">
        log = #{record.log,jdbcType=VARCHAR},
      </if>
          <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
          <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
          <if test="record.expired != null">
        expired = #{record.expired,jdbcType=VARCHAR},
      </if>
          <if test="record.attachPaths != null">
        attach_paths = #{record.attachPaths,jdbcType=VARCHAR},
      </if>
         
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  
  <update id="updateByExample" parameterType="map">
    update u_mq_message
    set
            	     	 
    	 id = #{record.id,jdbcType=BIGINT},
    	         	     	 
    	 message_genre = #{record.messageGenre,jdbcType=VARCHAR},
    	         	     	 
    	 status = #{record.status,jdbcType=VARCHAR},
    	         	     	 
    	 retry = #{record.retry,jdbcType=INTEGER},
    	         	     	 
    	 delay = #{record.delay,jdbcType=VARCHAR},
    	         	     	 
    	 assign_to = #{record.assignTo,jdbcType=VARCHAR},
    	         	     	 
    	 title = #{record.title,jdbcType=VARCHAR},
    	         	     	 
    	 content = #{record.content,jdbcType=VARCHAR},
    	         	     	 
    	 template_id = #{record.templateId,jdbcType=BIGINT},
    	         	     	 
    	 trace_id = #{record.traceId,jdbcType=VARCHAR},
    	         	     	 
    	 original_data = #{record.originalData,jdbcType=VARCHAR},
    	         	     	 
    	 log = #{record.log,jdbcType=VARCHAR},
    	         	     	 
    	 create_time = #{record.createTime,jdbcType=TIMESTAMP},
    	         	     	 
    	 update_time = #{record.updateTime,jdbcType=TIMESTAMP},
    	         	     	 
    	 expired = #{record.expired,jdbcType=VARCHAR},
    	         	     	 
    	 attach_paths = #{record.attachPaths,jdbcType=VARCHAR}
    	         
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  
      <update id="updateByPrimaryKeySelective" parameterType="com.clinbrain.mq.model.custom.UMqMessage">
    update u_mq_message
    <set>
                          
      <if test="messageGenre != null">
        message_genre = #{messageGenre,jdbcType=VARCHAR},
      </if>
                      
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
                      
      <if test="retry != null">
        retry = #{retry,jdbcType=INTEGER},
      </if>
                      
      <if test="delay != null">
        delay = #{delay,jdbcType=VARCHAR},
      </if>
                      
      <if test="assignTo != null">
        assign_to = #{assignTo,jdbcType=VARCHAR},
      </if>
                      
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
                      
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
                      
      <if test="templateId != null">
        template_id = #{templateId,jdbcType=BIGINT},
      </if>
                      
      <if test="traceId != null">
        trace_id = #{traceId,jdbcType=VARCHAR},
      </if>
                      
      <if test="originalData != null">
        original_data = #{originalData,jdbcType=VARCHAR},
      </if>
                      
      <if test="log != null">
        log = #{log,jdbcType=VARCHAR},
      </if>
                      
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
                      
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
                      
      <if test="expired != null">
        expired = #{expired,jdbcType=VARCHAR},
      </if>
                      
      <if test="attachPaths != null">
        attach_paths = #{attachPaths,jdbcType=VARCHAR},
      </if>
              </set>
    
    where 
            
    id = #{id,jdbcType=BIGINT}
                                                                                                                                  
  </update>

      	      	   	      	   	      	   	      	   	      	   	      	   	      	   	      	   	      	   	      	   	      	   	      	   	      	   	      	   	      	   	      	

  <update id="updateByPrimaryKey" parameterType="com.clinbrain.mq.model.custom.UMqMessage">
    update u_mq_message
    set 
    		 		 	  	  
		message_genre = #{messageGenre,jdbcType=VARCHAR},
	  	 		 	  	  
		status = #{status,jdbcType=VARCHAR},
	  	 		 	  	  
		retry = #{retry,jdbcType=INTEGER},
	  	 		 	  	  
		delay = #{delay,jdbcType=VARCHAR},
	  	 		 	  	  
		assign_to = #{assignTo,jdbcType=VARCHAR},
	  	 		 	  	  
		title = #{title,jdbcType=VARCHAR},
	  	 		 	  	  
		content = #{content,jdbcType=VARCHAR},
	  	 		 	  	  
		template_id = #{templateId,jdbcType=BIGINT},
	  	 		 	  	  
		trace_id = #{traceId,jdbcType=VARCHAR},
	  	 		 	  	  
		original_data = #{originalData,jdbcType=VARCHAR},
	  	 		 	  	  
		log = #{log,jdbcType=VARCHAR},
	  	 		 	  	  
		create_time = #{createTime,jdbcType=TIMESTAMP},
	  	 		 	  	  
		update_time = #{updateTime,jdbcType=TIMESTAMP},
	  	 		 	  	  
		expired = #{expired,jdbcType=VARCHAR},
	  	 		 	  		
		attach_paths = #{attachPaths,jdbcType=VARCHAR}
	  	 		
    where 
            
    id = #{id,jdbcType=BIGINT}
                                                                                                                                    
  </update>
  
                                                                                    
</mapper>